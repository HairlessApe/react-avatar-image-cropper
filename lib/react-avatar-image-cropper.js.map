{"version":3,"sources":["../src/react-avatar-image-cropper.js"],"names":["AvatarImageCropper","props","iconStyle","Object","assign","display","fill","height","width","userSelect","textStyle","color","fontSize","rootStyle","textAlign","alignItems","justifyContent","position","overflow","inputStyle","top","bottom","right","left","opacity","zIndex","cursor","previewStyle","backgroundRepeat","backgroundPosition","cropStyle","backgroundColor","sliderConStyle","btnStyle","fontWeight","whiteSpace","verticalAlign","border","borderRadius","margin","cancelBtnStyle","borderColor","applyBtnStyle","ele","avatar2D","ratio","img2D","origin","img","onDrop","evt","fileList","target","files","acceptedFiles","file","type","indexOf","size","maxsize","push","src","window","URL","createObjectURL","Image","onload","sizeW","sizeH","setState","Math","ceil","preview","length","_onMouseDown","e","x","clientX","state","relX","y","clientY","relY","document","addEventListener","_onMouseMove","_onMouseUp","preventDefault","removeEventListener","_resize","val","avW","avH","_apply","crop_canvas","createElement","getContext","drawImage","base64ImageData","toDataURL","findDOMNode","offsetWidth","offsetHeight","icon","backgroundImage","backgroundSize","maxWidth","actions"],"mappings":"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","file":"react-avatar-image-cropper.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SliderBtn from './SliderBtn';\r\n\r\nclass AvatarImageCropper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: null,\r\n            x: 0,\r\n            y: 0,\r\n            relX: 0,\r\n            relY: 0,\r\n            sizeW: 0,\r\n            sizeH: 0,\r\n\r\n        }\r\n    }\r\n    iconStyle = Object.assign({\r\n        display: 'inline-block',\r\n        fill: 'rgba(148,148,148,1)',\r\n        height: 32,\r\n        width: 32,\r\n        userSelect: 'none'\r\n    }, this.props.iconStyle);\r\n\r\n    textStyle = Object.assign({\r\n        color: 'rgba(148,148,148,1)',\r\n        fontSize: '18px'\r\n    }, this.props.textStyle);\r\n\r\n    rootStyle = Object.assign({\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n    }, this.props.rootStyle);\r\n\r\n    inputStyle = Object.assign({\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        opacity: 0,\r\n        zIndex: 8,\r\n        width: '100%',\r\n        cursor: 'pointer'\r\n    }, this.props.inputStyle);\r\n\r\n    previewStyle = Object.assign({\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 9,\r\n        backgroundRepeat: 'no-repeat',\r\n        cursor: 'move',\r\n        backgroundPosition: '0% 0%'\r\n    }, this.props.previewStyle)\r\n\r\n    cropStyle = Object.assign({\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0.5)'\r\n    })\r\n\r\n    sliderConStyle = Object.assign({\r\n        position: 'absolute',\r\n        top: '100%',\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 9,\r\n        backgroundColor: '#222',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }, this.props.sliderConStyle)\r\n\r\n    btnStyle = {\r\n        display: 'inline-block',\r\n        fontSize: '14px',\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        whiteSpace: 'nowrap',\r\n        verticalAlign: 'middle',\r\n        cursor: 'pointer',\r\n        border: '1px solid transparent',\r\n        borderRadius: '4px',\r\n        margin: '5px'\r\n    }\r\n    cancelBtnStyle = Object.assign({}, this.btnStyle, {\r\n        color: '#333',\r\n        backgroundColor: '#fff',\r\n        borderColor: '#ccc'\r\n    }, this.props.cancelBtnStyle)\r\n    applyBtnStyle = Object.assign({}, this.btnStyle,\r\n        {\r\n            color: '#fff',\r\n            backgroundColor: '#5cb85c',\r\n            borderColor: '#4cae4c'\r\n        }, this.props.applyBtnStyle)\r\n\r\n    ele = null;\r\n\r\n    avatar2D = {\r\n        width: 0,\r\n        height: 0,\r\n        ratio: 0\r\n    }\r\n    img2D = {\r\n        width: 0,\r\n        height: 0,\r\n        ratio: 0\r\n    }\r\n    origin = {\r\n        width: 0,\r\n        height: 0\r\n    }\r\n    img = null\r\n\r\n\r\n    componentDidMount() {\r\n        this.ele = ReactDOM.findDOMNode(this);\r\n        this.avatar2D.width = this.ele.offsetWidth;\r\n        this.avatar2D.height = this.ele.offsetHeight;\r\n    }\r\n\r\n    onDrop = (evt) => {\r\n        var fileList = evt.target.files\r\n        var acceptedFiles = [];\r\n        for (let file of fileList) {\r\n            if ((file.type.indexOf('png') >= 0 || file.type.indexOf('jpg') >= 0 || file.type.indexOf('jpeg') >= 0) && file.size < this.props.maxsize\r\n                ? this.props.maxsize\r\n                : 1024 * 1024 * 2) {\r\n                acceptedFiles.push(file);\r\n                var src = window\r\n                    .URL\r\n                    .createObjectURL(file);\r\n                var img = new Image();\r\n                img.src = src;\r\n                img.onload = () => {\r\n                    this.img = img;\r\n                    this.img2D.width = img.width;\r\n                    this.img2D.height = img.height;\r\n                    this.img2D.ratio = img.width / img.height;\r\n                    var sizeW = this.img2D.ratio >= 1 ? this.avatar2D.height * this.img2D.ratio : this.avatar2D.width;\r\n                    sizeW = sizeW < this.avatar2D.width ? this.avatar2D.width : sizeW\r\n                    var sizeH = sizeW / this.img2D.ratio;\r\n                    this.setState({\r\n                        sizeW: Math.ceil(sizeW),\r\n                        sizeH: sizeH,\r\n\r\n                    })\r\n                    this.origin = {\r\n                        width: sizeW,\r\n                        height: sizeH\r\n                    }\r\n                };\r\n\r\n                file.preview = src;\r\n            }\r\n        }\r\n\r\n        if (acceptedFiles.length) {\r\n            this.setState({ preview: acceptedFiles[0].preview })\r\n\r\n            if (this.props.onDrop) {\r\n                this\r\n                    .props\r\n                    .onDrop(acceptedFiles[0]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _onMouseDown = (e) => {\r\n        this.setState({\r\n            x: e.clientX - this.state.relX,\r\n            y: e.clientY - this.state.relY\r\n        })\r\n        document.addEventListener('mousemove', this._onMouseMove);\r\n        document.addEventListener('mouseup', this._onMouseUp);\r\n        e.preventDefault();\r\n    }\r\n    _onMouseMove = (e) => {\r\n        var relX = this.state.x - e.clientX;\r\n        var relY = this.state.y - e.clientY;\r\n        if (relX < this.state.sizeW - this.avatar2D.width && relX > 0) {\r\n            this.setState({\r\n                relX: -relX\r\n            })\r\n        }\r\n        if (relY < this.state.sizeH - this.avatar2D.height && relY > 0) {\r\n            this.setState({\r\n                relY: -relY\r\n            })\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n    _onMouseUp = (e) => {\r\n        document.removeEventListener('mousemove', this._onMouseMove);\r\n        document.removeEventListener('mouseup', this._onMouseUp);\r\n        e.preventDefault();\r\n    }\r\n    _resize = (val) => {\r\n        var sizeW = this.origin.width * (1 + val / 50);\r\n        var sizeH = this.origin.height * (1 + val / 50);\r\n        var avW = sizeW - this.avatar2D.width;\r\n        var avH = sizeH - this.avatar2D.height;\r\n        var relX = -this.state.relX > avW ? -avW : this.state.relX\r\n        var relY = -this.state.relY > avH ? -avH : this.state.relY\r\n        this.setState({\r\n            sizeH: sizeH,\r\n            sizeW: sizeW,\r\n            relX: relX,\r\n            relY: relY\r\n        });\r\n    }\r\n    _apply = () => {\r\n        var crop_canvas = document.createElement('canvas');\r\n        crop_canvas.width = this.avatar2D.width;\r\n        crop_canvas.height = this.avatar2D.height;\r\n        var ratio = this.state.sizeW / this.img2D.width;\r\n        crop_canvas.getContext('2d').drawImage(this.img, -this.state.relX / ratio, -this.state.relY / ratio, this.img2D.width, this.img2D.height, 0, 0, this.state.sizeW, this.state.sizeH);\r\n        var base64ImageData = crop_canvas.toDataURL(\"image/png\");\r\n        this.setState({\r\n            src: base64ImageData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { relX, relY, sizeW, sizeH } = this.state;\r\n\r\n        return (\r\n            <avatar-image style={{ height: '100%', display: 'block', position: 'relative' }}>\r\n                <div style={this.rootStyle}>\r\n                    <div>\r\n                        {this.props.icon\r\n                            ? this.props.icon\r\n                            : (\r\n                                <svg viewBox=\"0 0 24 24\" style={this.iconStyle}>\r\n                                    <circle cx=\"12\" cy=\"12\" r=\"3.2\"></circle>\r\n                                    <path\r\n                                        d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"></path>\r\n                                </svg>\r\n                            )\r\n                        }\r\n                        <p style={this.textStyle}>Upload photo</p>\r\n                    </div>\r\n                    <input\r\n                        style={this.inputStyle}\r\n                        type='file'\r\n                        accept='images/*'\r\n                        onChange={(e) => {\r\n                            this.onDrop(e)\r\n                        }} />\r\n                    {\r\n                        this.state.preview &&\r\n                        (\r\n                            <div>\r\n                                <div\r\n                                    onMouseDown={this._onMouseDown}\r\n                                    style={Object.assign({}, this.previewStyle, {\r\n                                        backgroundImage: 'url(' + this.state.preview + ')',\r\n                                        backgroundSize: sizeW + 'px ' + sizeH + 'px',\r\n                                        backgroundPosition: '' + relX + 'px ' + relY + 'px'\r\n                                    })}>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n                {\r\n                    this.state.preview &&\r\n                    (\r\n                        <div style={this.sliderConStyle}>\r\n                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', maxWidth: '600px', width: '100%' }}>\r\n                                <div style={{ height: '20px', margin: '5px', display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\r\n                                    <SliderBtn resize={this._resize} />\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        this.props.actions ?\r\n                                            this.props.actions\r\n                                            :\r\n                                            (\r\n                                                <div style={{ display: 'flex' }}>\r\n                                                    <button style={this.cancelBtnStyle}>\r\n                                                        <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n                                                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                                        </svg>\r\n                                                    </button>\r\n                                                    <button style={this.applyBtnStyle} onClick={this._apply}>\r\n                                                        <svg fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                                            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n                                                        </svg>\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                            )\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n                <img style={{ position: 'fixed', bottom: '250px' }} src={this.state.src} />\r\n            </avatar-image>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvatarImageCropper;\r\n"]}